@model PagedList.IPagedList<SpeakOutWeb.Models.Vocabulary>
@using PagedList; 
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}
<link href="~/Library/css/dictionaryStyle.css" rel="stylesheet" />
<article id="webslides" class="vertical">
    <section class="bg-white">
        <span class="background bg1" style="background-image:url('/Library/images/background1.jpg')"></span>
        @using (Html.BeginForm("Index", "Vocabularies", FormMethod.Get))
        {
            <p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        }
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Your vocabularies", "Index", new { sortOrder = ViewBag.VocabSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Your bookmarks
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>

                        <h3>@Html.DisplayFor(modelItem => item.EngWord)</h3>
                        <button id="speakButton" class="btn speakButton" data-speak="@item.EngWord">
                            <img src="~/Content/500px-Speaker_Icon.svg.png" />
                        </button><br />
                        <h6>@Html.DisplayFor(modelItem => item.Spelling)</h6><br />
                        <h4>@Html.DisplayFor(modelItem => item.VnWord)</h4>
                    </td>
                    <td>
                        @if (item.Bookmark == false)
                        {
                            <button type="submit" class="btn btn-primary" id="bookmarkedButton" data-id="@item.Id">Bookmark</button>
                        }

                    </td>

                </tr>
            }
        </table>
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </section>
</article>
@section Script1{
    <script>
        $('#bookmarkedButton').on('click', function () {
            $.ajax({
            type: 'POST',
            url: '@Url.Action("../Vocabularies/UpdateBookmark")',
            contentType: "application/json; charset=utf-8",
            data: '{ "Id": "' + $(this).attr("data-id") + '" }',
                success: function (result, status, xhr) {
                    window.location.reload();
            },
            error: function (xhr, status, error) {
                alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
            }
        });
        });
        $('.speakButton').on('click', function () {
            var synth = window.speechSynthesis;
            var utterThis = new SpeechSynthesisUtterance($(this).attr("data-speak"));
            synth.speak(utterThis);
        });
    </script>

}