@model PagedList.IPagedList<SpeakOutWeb.Models.UserGroup>
@using Microsoft.AspNet.Identity
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/css")
}
<link href="~/Library/css/dictionaryStyle.css" rel="stylesheet" />
<style>
    #buttonControl a {
        text-decoration: none !important;
        color: white !important;
    }

    td {
        text-align: center;
        vertical-align: middle;
    }

    th {
        text-align: center;
        vertical-align: middle;
    }
</style>
<div class="modal fade" id="myModal2" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Cập nhật thông tin lớp</h4>
            </div>
            <form id="myform">
                <div class="modal-body">
                    <div class="form-group">
                        <label class="form-inline">Tên nhóm</label>
                        <input type="text" class="form-inline form-control" id="nameUpdate" required min="5" name="nameUpdate" />
                    </div>
                    <div class="form-group">
                        <label class="form-inline">Mô tả</label>
                        <input type="text" class="form-inline form-control" id="desUpdate" required min="5" name="desUpdate" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" id="updateButton">Cập nhật</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Bạn có chắc chắn muốn xóa</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="submitButton1">Xóa</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Nhập tên của bạn</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hiddenNumber" value="@ViewBag.Count" />
                <input type="text" class="form-control" id="txtName" required />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="submitButton">Go</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<article id="webslides" class="vertical">
    <section class="bg-white  ">
        <span class="background bg1" style="background-image:url('@Url.Content("~/Library/images/real-estate-background-images-6.jpg")')"></span>
        <div class="container">

            <div>

                @using (Html.BeginForm("Index", "UserGroups", FormMethod.Get, new { @class = "formSearch" }))
                {
                    <p class="formSearch">
                        Tìm kiếm theo tên nhóm: @Html.TextBox("SearchString", ViewBag.CurrentFilter2 as string)
                        <input type="submit" value="Tìm Kiếm" id="submitSearch" />

                        <button id="sortCreatedDateButton">@Html.ActionLink("Tạo Nhóm Mới", "Create", null, new { @class = "createButton" })</button>
                    </p>
                }
            </div>

            <table class="table">
                <tr>
                    <th>
                        Mã số nhóm
                    </th>
                    <th>
                        <button id="sortButton">@Html.ActionLink("  TÊN NHÓM", "Index", new { sortOrder = ViewBag.VocabSortParm2, currentFilter = ViewBag.CurrentFilter2 }, new { @class = "glyphicon glyphicon-sort-by-alphabet" })</button>
                    </th>
                    <th>
                        Mô tả
                    </th>
                    <th>
                        Người thành lập
                    </th>
                    <th>
                        <button id="sortButton">@Html.ActionLink("   NGÀY TẠO ", "Index", new { sortOrder = ViewBag.DateSortParm2, currentFilter = ViewBag.CurrentFilter2 }, new { @class = "glyphicon glyphicon-sort-by-alphabet" })</button>
                    </th>
                    <th>Tham gia</th>
                </tr>

                @foreach (var item in Model)
                {
                    if (item.Email == User.Identity.GetUserName())
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GroupName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedDate)
                            </td>
                            <td id="buttonControl">
                                <button class="btn btn-info" id="btnJoin">@Html.ActionLink("Chi Tiết", "Details", new { id = item.Id })</button>
                                <button class="btn btn-danger btn-delete" data-toggle="modal" data-trigger="hover" href="#myModal1" data-id="@item.Id">Xóa</button>
                                <button class="btn btn-info btn-update" data-toggle="modal" data-trigger="hover" href="#myModal2" data-id="@item.Id" data-group="@item.GroupName" data-description="@item.Description" data-email="@item.Email" data-date="@item.CreatedDate">Cập nhật</button>
                            </td>
                        </tr>
                    }
                }
            </table>
            <br />
            Số trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) trên @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort2, currentFilter = ViewBag.CurrentFilter2 }))
        </div>
    </section>
</article>
@section Scripts{
    <script>
        var idClass = "";
        var group = ""; var description = ""; var email = ""; var date = "";
        $('#submitButton').on('click', function () {
            var idClass = $(".btnSubmit").attr("data-class");
            var name = $('#txtName').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("../UserGroupsAcceptance/CreateRequest")',
                dataType: "json",
                data: { name: name, idClass: idClass },
                success: function (result, status, xhr) {
                    console.log("Lưu thành công");
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
                }
            });
        });
        $('.btn-update').on('click', function () {
            idClass = $(this).attr('data-id');
            group = $(this).attr('data-group');
            description = $(this).attr('data-description');
            email = $(this).attr('data-email');
            date = $(this).attr('data-date');
            $('#nameUpdate').val(group);
            $('#desUpdate').val(description);
        });

        $('#updateButton').on('click', function () {
            var userGroup = { Id: idClass, GroupName: $('#nameUpdate').val(), Description: $('#desUpdate').val(), Email: email, CreatedDate: date };
            if ($('#nameUpdate').val().trim() === "" || $('#desUpdate').val().trim() === "") {
                alert("'Tên nhóm hoặc mô tả không được chứa toàn bộ kí tự khoảng trắng");
            } else {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("../UserGroups/UpdateResult")',
                    dataType: "json",
                    data: userGroup,
                    success: function (result, status, xhr) {
                        $.notify(result, "info");
                        window.location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
                    }
                });
            }
        });

        $('.btn-delete').on('click', function () {
            idClass= $(this).attr('data-id') ;
        });
        $('#submitButton1').on('click', function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("../UserGroups/Delete")',
                    dataType: "json",
                    data: { idClass: idClass },
                    success: function (result, status, xhr) {
                        $.notify(result, "info");
                        window.location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
                    }
                });
        });
    </script>
}