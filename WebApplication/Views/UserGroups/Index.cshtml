@model PagedList.IPagedList<SpeakOutWeb.Models.UserGroup>
@using Microsoft.AspNet.Identity
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/css")
}
<link href="~/Library/css/dictionaryStyle.css" rel="stylesheet" />
<style>
    #buttonControl a {
        text-decoration: none !important;
        color: white !important;
    }

    td {
        text-align: center;
        vertical-align: middle;
    }

    th {
        text-align: center;
        vertical-align: middle;
    }
</style>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Nhập tên của bạn</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hiddenNumber" value="@ViewBag.Count" />
                <input type="text" class="form-control" id="txtName" required />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="submitButton">Go</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<span class="background" style="background-image:url('@Url.Content("~/Library/images/real-estate-background-images-6.jpg")'); filter: blur(2px)"></span>
<article id="webslides" class="vertical">
    <section class="bg-white  ">
        <div class="container">

            <div>

                @using (Html.BeginForm("Index", "UserGroups", FormMethod.Get, new { @class = "formSearch" }))
                {
                <p class="formSearch">
                    Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" id="submitSearch" />
                    @Html.ActionLink("Create New", "Create", null, new { @class = "createButton" })
                </p>
                }

            </div>
           
            <table class="table">
                <tr>
                    <th>
                        Mã số nhóm
                    </th>
                    <th>
                        @Html.ActionLink("Tên nhóm", "Index", new { sortOrder = ViewBag.VocabSortParm1, currentFilter = ViewBag.CurrentFilter1 })
                    </th>
                    <th>
                        Mô tả
                    </th>
                    <th>
                        Người thành lập
                    </th>
                    <th>
                        @Html.ActionLink("Ngày tạo", "Index", new { sortOrder = ViewBag.DateSortParm1, currentFilter = ViewBag.CurrentFilter1 })
                    </th>
                    <th>Tham gia</th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.GroupName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td id="buttonControl">
                            @{ int accept = item.UserAcceptances.Count;
                                int count = 0;
                                if (item.Email == User.Identity.GetUserName())
                                {
                                    <button class="btn btn-danger" id="btnJoin">@Html.ActionLink("Joined", "Details", new { id = item.Id })</button>
                                    count++;
                                    accept = 0;
                                }
                                else if (item.UserGroupDetails.Count() > 0)
                                {
                                    foreach (var item2 in item.UserGroupDetails)
                                    {
                                        if (item2.StudentEmail == User.Identity.GetUserName())
                                        {
                                            <button class="btn btn-danger" id="btnJoin">@Html.ActionLink("Joined", "Details", new { id = item.Id })</button>
                                            count++;
                                            accept = 0;
                                            break;
                                        }
                                    }
                                }
                                if (accept > 0)
                                {
                                    foreach (var item3 in item.UserAcceptances)
                                    {
                                        if (item3.UserEmail == User.Identity.GetUserName() && item3.GroupId == item.Id)
                                        {
                                            <button class="btn btn-danger" id="btnJoin">Waiting</button>
                                            count++;
                                            break;
                                        }
                                    }

                                }
                                if (count == 0)
                                {
                                    <button class="btn btn-danger btnSubmit" data-class="@item.Id" data-toggle="modal" href="#myModal">Join team</button>
                                }
                            }
                        </td>
                    </tr>
                }
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </section>
</article>
@section Scripts{
    <script>
        $('#submitButton').on('click', function () {
            var idClass = $(".btnSubmit").attr("data-class");
            var name = $('#txtName').val();
            $.ajax({
                type: 'POST',
                url: '../UserGroupsAcceptance/CreateRequest',
                dataType: "json",
                data: { name: name, idClass: idClass },
                success: function (result, status, xhr) {
                    console.log("Lưu thành công");
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
                }
            });
        });
        @*$(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: '../UserGroups/getListRequestUser',
                dataType: "json",
                success: function (result, status, xhr) {
                    var allList = '';
                    $.each(response, function (i, item) {
                        if (@User.Identity.GetUserName()==item.E ) {

                        }
                    });
                },
                error: function (xhr, status, error) {
                    alert('Result: ' + status + ' ' + error + ' ' + xhr.status + ' ' + xhr.statusText)
                }
            });
        });*@
    </script>
}